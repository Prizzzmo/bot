import re
import random
import textwrap
from src.base_service import BaseService

class TopicService(BaseService):
    """–ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–µ–º–∞–º–∏ –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏"""

    def __init__(self, api_client, logger):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ç–µ–º

        Args:
            api_client: –ö–ª–∏–µ–Ω—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            logger: –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–µ–π—Å—Ç–≤–∏–π
        """
        super().__init__(logger)
        self.api_client = api_client
        
        # –°–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≥–ª–∞–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
        self.standard_chapters = [
            "–ò—Å—Ç–æ–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏",
            "–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è", 
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏",
            "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç",
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
        ]

        # –≠–º–æ–¥–∑–∏ –¥–ª—è –≥–ª–∞–≤
        self.chapter_emoji = {
            "–ò—Å—Ç–æ–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏": "üîç",
            "–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è": "üìÖ",
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏": "üë•",
            "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç": "üåç",
            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ": "‚öñÔ∏è"
        }

        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (—Å–∏–º–≤–æ–ª–æ–≤)
        self.max_message_size = 4000
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–µ—Ç–æ–¥–∞—Ö
        self.logger = logger

    def _do_initialize(self) -> bool:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å —Ç–µ–º

        Returns:
            bool: True –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
        """
        try:
            # –°–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≥–ª–∞–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã
            self.standard_chapters = [
                "–ò—Å—Ç–æ–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏",
                "–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è", 
                "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏",
                "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç",
                "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"
            ]

            # –≠–º–æ–¥–∑–∏ –¥–ª—è –≥–ª–∞–≤
            self.chapter_emoji = {
                "–ò—Å—Ç–æ–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏": "üîç",
                "–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è": "üìÖ",
                "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏": "üë•",
                "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç": "üåç",
                "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ": "‚öñÔ∏è"
            }

            # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (—Å–∏–º–≤–æ–ª–æ–≤)
            self.max_message_size = 4000
            
            return True
        except Exception as e:
            self._logger.log_error(e, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TopicService")
            return False

    def generate_topics_list(self, use_cache=True):
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–º –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏

        Args:
            use_cache (bool): –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ –∫—ç—à

        Returns:
            list: –°–ø–∏—Å–æ–∫ —Ç–µ–º
        """
        prompt = "–°–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ –∏–∑ 30 –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–º –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è. –ö–∞–∂–¥–∞—è —Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –µ–º–∫–æ–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π (–Ω–µ –±–æ–ª–µ–µ 6-7 —Å–ª–æ–≤). –ü–µ—Ä–µ—á–∏—Å–ª–∏ –∏—Ö –≤ –≤–∏–¥–µ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."
        topics_text = self.api_client.ask_grok(prompt, use_cache=use_cache)

        # –ü–∞—Ä—Å–∏–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–º—ã
        return self.parse_topics(topics_text)

    def generate_new_topics_list(self):
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ–º —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º

        Returns:
            list: –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ–º
        """
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–µ–º
        random_seed = random.randint(1, 1000)
        prompt = f"–°–æ—Å—Ç–∞–≤—å —Å–ø–∏—Å–æ–∫ –∏–∑ 30 –Ω–æ–≤—ã—Ö –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ–º –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ —Ç–µ–º–∞—Ö {random_seed}. –í—ã–±–µ—Ä–∏ —Ç–µ–º—ã, –æ—Ç–ª–∏—á–Ω—ã–µ –æ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∏ —Ä–∞–Ω–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö. –ö–∞–∂–¥–∞—è —Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –µ–º–∫–æ–π –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π (–Ω–µ –±–æ–ª–µ–µ 6-7 —Å–ª–æ–≤). –ü–µ—Ä–µ—á–∏—Å–ª–∏ –∏—Ö –≤ –≤–∏–¥–µ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞."

        # –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã—Ö —Ç–µ–º
        topics_text = self.api_client.ask_grok(prompt, use_cache=False)

        # –ü–∞—Ä—Å–∏–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–º—ã
        return self.parse_topics(topics_text)

    def parse_topics(self, topics_text):
        """
        –ü–∞—Ä—Å–∏—Ç —Ç–µ–º—ã –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ API

        Args:
            topics_text (str): –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API

        Returns:
            list: –°–ø–∏—Å–æ–∫ —Ç–µ–º
        """
        topics = []

        # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –∏—â–µ–º –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã
        for line in topics_text.splitlines():
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞ "1. –¢–µ–º–∞" –∏–ª–∏ "1) –¢–µ–º–∞"
            match = re.match(r'^\s*(\d+)[\.\)]\s+(.*?)$', line)
            if match:
                number, topic = match.groups()
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–º—É —Å –Ω–æ–º–µ—Ä–æ–º –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞
                topics.append(f"{number}. {topic.strip()}")

        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã
        if not topics:
            for line in topics_text.splitlines():
                # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–µ–º–∞–º–∏ –±–µ–∑ –Ω—É–º–µ—Ä–∞—Ü–∏–∏
                if line.strip() and not line.startswith('#') and not line.startswith('**'):
                    topics.append(line.strip())

        # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        filtered_topics = []
        seen_topics = set()

        for topic in topics:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Ç–µ–º—ã –±–µ–∑ –Ω–æ–º–µ—Ä–∞
            text = topic.split('. ', 1)[1] if '. ' in topic else topic
            text_lower = text.lower()

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–∞–∫–æ–π —Ç–µ–º—ã –µ—â–µ –Ω–µ –±—ã–ª–æ
            if text_lower not in seen_topics:
                filtered_topics.append(topic)
                seen_topics.add(text_lower)

        return filtered_topics

    def get_cached_topic_info(self, topic, update_callback=None, text_cache_service=None):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ –∏–∑ –∫—ç—à–∞ –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é

        Args:
            topic (str): –¢–µ–º–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            update_callback (function): –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
            text_cache_service (TextCacheService): –°–µ—Ä–≤–∏—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤

        Returns:
            list: –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ —Ç–µ–º–µ
        """
        if not topic:
            return ["–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à, –µ—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
        if text_cache_service:
            cache_key_type = "topic_info"
            cached_content = text_cache_service.get_text(topic, cache_key_type)

            if cached_content:
                # –ù–∞—à–ª–∏ –≤ –∫—ç—à–µ - –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
                if update_callback:
                    update_callback(f"üìù –ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ: *{topic}* –∏–∑ –∫—ç—à–∞...")

                self._logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–µ–º–µ '{topic}' –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –∫—ç—à–∞")

                try:
                    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤ –∫—ç—à–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è JSON-—Å—Ç—Ä–æ–∫–∞ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                    import json
                    return json.loads(cached_content)
                except Exception as e:
                    self._logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–µ–º—ã '{topic}': {e}")
                    # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ - —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ

            if update_callback:
                update_callback(f"üîÑ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫—ç—à–µ. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ: *{topic}*...")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ
        messages = self.get_topic_info(topic, update_callback)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à, –µ—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã
        if text_cache_service and messages and len(messages) > 1 and not messages[0].startswith("‚ö†Ô∏è"):
            try:
                # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –∫—ç—à–µ
                import json
                serialized_messages = json.dumps(messages, ensure_ascii=False)
                text_cache_service.save_text(topic, "topic_info", serialized_messages)
                self._logger.info(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ç–µ–º–µ '{topic}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫—ç—à")
            except Exception as e:
                self._logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã '{topic}' –≤ –∫—ç—à: {e}")

        return messages

    def get_topic_info(self, topic, update_callback=None):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ, —Ä–∞–∑–±–∏—Ç—É—é –Ω–∞ –≥–ª–∞–≤—ã

        Args:
            topic (str): –¢–µ–º–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            update_callback (function): –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞

        Returns:
            list: –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ —Ç–µ–º–µ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –∫–∞–∂–¥—É—é –≥–ª–∞–≤—É)
        """
        try:
            # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            def sanitize_markdown(text):
                if not text:
                    return ""
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
                chars_to_escape = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
                for char in chars_to_escape:
                    text = text.replace(char, '\\' + char)
                return text

            # –û—á–∏—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
            safe_topic = sanitize_markdown(topic)
            chapters = self.standard_chapters

            if update_callback:
                update_callback(f"üîç –°–æ–±–∏—Ä–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ: *{topic}*...")

            # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ–º—ã –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
            context_prompt = f"""–û–ø—Ä–µ–¥–µ–ª–∏ –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏ —Ä–∞–º–∫–∏ —Ç–µ–º—ã "{safe_topic}" –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.
            –£–∫–∞–∂–∏:
            1. –¢–æ—á–Ω—ã–µ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞–º–∫–∏ (–≥–æ–¥—ã, –≤–µ–∫–∞, –ø–µ—Ä–∏–æ–¥—ã)
            2. –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –æ—Ö–≤–∞—Ç (—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏, —Ä–µ–≥–∏–æ–Ω—ã)
            3. –ö–ª—é—á–µ–≤—ã—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–µ—è—Ç–µ–ª–µ–π, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–º–æ–π
            4. –û—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ
            5. –ì–ª–∞–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã/–∞–∫—Ç—ã/–∑–∞–∫–æ–Ω—ã, –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ

            –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º, —Ç–æ—á–Ω—ã–º –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º.
            """

            # –ü–æ–ª—É—á–∞–µ–º –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ–º—ã –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫—ç—à–∞
            self._logger.info(f"–ó–∞–ø—Ä–∞—à–∏–≤–∞—é –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ–º—ã '{topic}'")
            topic_context = self.api_client.ask_grok(context_prompt, use_cache=False)

            if update_callback:
                update_callback(f"üìö –§–æ—Ä–º–∏—Ä—É—é –≥–ª–∞–≤—ã –¥–ª—è —Ç–µ–º—ã: *{topic}*...")

            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã –æ—Ç–¥–µ–ª—å–Ω–æ
            chapters_content = {}

            for i, chapter in enumerate(chapters):
                if update_callback:
                    update_callback(f"üìù –†–∞–±–æ—Ç–∞—é –Ω–∞–¥ –≥–ª–∞–≤–æ–π {i+1}: *{chapter}*...")

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã
                chapter_prompt = self._get_chapter_prompt(chapter, safe_topic)

                # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–º—ã –∫ –∑–∞–ø—Ä–æ—Å—É
                full_prompt = f"""–ö–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–º—ã: {topic_context}

–í–ê–ñ–ù–û: –¢—ã –≤—ã—Å–æ–∫–æ–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏—Å—Ç–æ—Ä–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≥–ª—É–±–æ–∫–∏–π, –¥–µ—Ç–∞–ª—å–Ω—ã–π –∏ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–º—ã "{safe_topic}" –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞.

{chapter_prompt}

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ö–ê–ß–ï–°–¢–í–£ –û–¢–í–ï–¢–ê:
1. –ê–±—Å–æ–ª—é—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å
2. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∞ (—Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã, –∏–º–µ–Ω–∞, —Ü–∏—Ñ—Ä—ã, –º–µ—Å—Ç–∞)
3. –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π —Å—Ç–∏–ª—å –∏–∑–ª–æ–∂–µ–Ω–∏—è
4. –õ–æ–≥–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞
5. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑ –∏ "–≤–æ–¥—ã"
6. –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å –∞–Ω–∞—Ö—Ä–æ–Ω–∏–∑–º–æ–≤ –∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
7. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –Ω–∞—É—á–Ω—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º
8. –û–±—ä–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –±–µ—Å–ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç—å –∏–∑–ª–æ–∂–µ–Ω–∏—è

–ù–∞—á–∏–Ω–∞–π —Å—Ä–∞–∑—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è, –±–µ–∑ –≤–≤–æ–¥–Ω—ã—Ö —Ñ—Ä–∞–∑ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤.
–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ —É—á–µ–±–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.
"""

                # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è 
                # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –¥–æ 3-—Ö —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
                for attempt in range(3):
                    self.logger.info(f"–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –≥–ª–∞–≤—ã '{chapter}', –ø–æ–ø—ã—Ç–∫–∞ {attempt+1}")
                    chapter_content = self.api_client.ask_grok(full_prompt, use_cache=False)

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞ - –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º
                    if len(chapter_content) >= 1500:
                        break  # –î–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –æ–±—ä–µ–º

                    # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π, –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å —É—Å–∏–ª–µ–Ω–∏–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
                    if update_callback:
                        update_callback(f"‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω–∞ –Ω–µ–ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≥–ª–∞–≤—ã {i+1}. –ü—Ä–æ–±—É—é —Å–Ω–æ–≤–∞...")

                    # –£—Å–∏–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–∏
                    full_prompt += f"\n\n–ü–û–õ–£–ß–ï–ù–ù–´–ô –û–¢–í–ï–¢ –ù–ï–î–û–°–¢–ê–¢–û–ß–ï–ù! –ü—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –±—ã–ª —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–º ({len(chapter_content)} —Å–∏–º–≤–æ–ª–æ–≤). –¢—Ä–µ–±—É–µ—Ç—Å—è –ú–ò–ù–ò–ú–£–ú 1500 —Å–∏–º–≤–æ–ª–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π, –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏ —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç."

                chapters_content[chapter] = chapter_content
                self.logger.info(f"–ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≥–ª–∞–≤—ã '{chapter}' –ø–æ —Ç–µ–º–µ '{topic}': {len(chapter_content)} —Å–∏–º–≤–æ–ª–æ–≤")

            if update_callback:
                update_callback(f"‚úèÔ∏è –§–æ—Ä–º–∞—Ç–∏—Ä—É—é –º–∞—Ç–µ—Ä–∏–∞–ª –ø–æ —Ç–µ–º–µ: *{topic}*...")

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≥–ª–∞–≤–∞–º
            messages = self._format_topic_messages(topic, chapters_content)

            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
            if not messages:
                return [f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ: {topic}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ç–µ–º—É."]

            return messages

        except Exception as e:
            self._logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ {topic}: {e}")
            return [f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ: {topic}. –û—à–∏–±–∫–∞: {str(e)}"]

    def _get_chapter_prompt(self, chapter, topic):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥–ª–∞–≤–µ

        Args:
            chapter (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã
            topic (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã

        Returns:
            str: –ü—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        """
        # –°–ª–æ–≤–∞—Ä—å —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≥–ª–∞–≤
        chapter_prompts = {
            "–ò—Å—Ç–æ–∫–∏ –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏": f"""–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –≥–ª—É–±–æ–∫–∏–π –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ–∫–æ–≤ –∏ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–æ–∫ —Ç–µ–º—ã "{topic}" –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.

            –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏:
            1. –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —ç–ø–æ—Ö–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∏ —Å–æ–±—ã—Ç–∏—è (—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏)
            2. –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –≤ –†–æ—Å—Å–∏–∏ –∏ –º–∏—Ä–µ –Ω–∞–∫–∞–Ω—É–Ω–µ –æ–ø–∏—Å—ã–≤–∞–µ–º—ã—Ö —Å–æ–±—ã—Ç–∏–π
            3. –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã –∏ —É—Å–ª–æ–≤–∏—è, –ø–æ–≤–ª–∏—è–≤—à–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ç–µ–º—ã
            4. –°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—â–µ—Å—Ç–≤–∞ –∏ –≤–∑–∞–∏–º–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤/—Å–æ—Å–ª–æ–≤–∏–π
            5. –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –∏–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ø–æ—Å—ã–ª–∫–∏
            6. –ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è-–ø—Ä–µ–¥—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ —Å —Ç–æ—á–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
            7. –ü—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º–æ–π —Ç–µ–º–æ–π

            –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å:
            ‚Ä¢ –¢–æ—á–Ω—ã–µ –¥–∞—Ç—ã, –≥–æ–¥—ã, –ø–µ—Ä–∏–æ–¥—ã
            ‚Ä¢ –ò–º–µ–Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π —Å –∏—Ö –¥–æ–ª–∂–Ω–æ—Å—Ç—è–º–∏/—Ç–∏—Ç—É–ª–∞–º–∏
            ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –≥–¥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–∏ —Å–æ–±—ã—Ç–∏—è
            ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)

            –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ —Å—Ç—Ä–æ–≥–æ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º.
            –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è. 
            –û–±—ä–µ–º: 4-5 —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–±–∑–∞—Ü–µ–≤, –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π—Å—è.
            """,

            "–ö–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è": f"""–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—é –∏ –∞–Ω–∞–ª–∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π —Ç–µ–º—ã "{topic}" –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.

            –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏:
            1. –°—Ç—Ä–æ–≥—É—é —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏ (–¥–µ–Ω—å, –º–µ—Å—è—Ü, –≥–æ–¥ - –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)
            2. –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –º–µ—Å—Ç–∞, —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤
            3. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —ç—Ç–∞–ø—ã –∏–ª–∏ —Ñ–∞–∑—ã (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
            4. –ü–æ–≤–æ—Ä–æ—Ç–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã, –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç–æ—á–∫–∏ –∏ –ø–µ—Ä–µ–ª–æ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
            5. –î–µ–π—Å—Ç–≤–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–∂–¥–æ–º –≤–∞–∂–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏
            6. –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–∏–º–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
            7. –î–∞–Ω–Ω—ã–µ –æ —á–∏—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤–æ–π—Å–∫, –ø–æ—Ç–µ—Ä—è—Ö, –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç–∞—Ö (–¥–ª—è –≤–æ–µ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π)
            8. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ, —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ, —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã (–µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–æ)

            –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å:
            ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, —Å —Ç–æ—á–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏
            ‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–º –Ω–∞ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ —á–∞—Å—Ç–∏ –ø–æ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏–∏ –∏–ª–∏ –∑–Ω–∞—á–∏–º–æ—Å—Ç–∏
            ‚Ä¢ –•–æ—Ä–æ—à–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, —Å —á–µ—Ç–∫–∏–º–∏ –ø—Ä–∏—á–∏–Ω–Ω–æ-—Å–ª–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏

            –û–±—ä–µ–º: –Ω–µ –º–µ–Ω–µ–µ 5-6 —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–±–∑–∞—Ü–µ–≤ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏.
            –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤.
            """,

            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ª–∏—á–Ω–æ—Å—Ç–∏": f"""–ü—Ä–µ–¥—Å—Ç–∞–≤—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–æ–ª–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π –≤ —Ç–µ–º–µ "{topic}" –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.

            –î–ª—è –∫–∞–∂–¥–æ–π –∫–ª—é—á–µ–≤–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏ (–Ω–µ –º–µ–Ω–µ–µ 5-6) —É–∫–∞–∂–∏:
            1. –ü–æ–ª–Ω–æ–µ –∏–º—è, –≥–æ–¥—ã –∂–∏–∑–Ω–∏, –∑–∞–Ω–∏–º–∞–µ–º—ã–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Ç–∏—Ç—É–ª—ã
            2. –ö—Ä–∞—Ç–∫–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Å–≤–µ–¥–µ–Ω–∏—è, –∏–º–µ—é—â–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Ç–µ–º–µ
            3. –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –≤–∑–≥–ª—è–¥—ã, —É–±–µ–∂–¥–µ–Ω–∏—è, –≤–ª–∏—è–≤—à–∏–µ –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π
            4. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, —Ä–µ—à–µ–Ω–∏—è, –ø–æ—Å—Ç—É–ø–∫–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º—ã—Ö —Å–æ–±—ã—Ç–∏–π
            5. –¶–µ–ª–∏, –º–æ—Ç–∏–≤—ã, –∏–Ω—Ç–µ—Ä–µ—Å—ã –¥–∞–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –¥–µ—è—Ç–µ–ª—è
            6. –û—Ç–Ω–æ—à–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç–µ–º—ã
            7. –û—Ü–µ–Ω–∫—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏–π, –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Ö–æ–¥ —Å–æ–±—ã—Ç–∏–π, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
            8. –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–∏–µ –ª–∏—á–Ω–æ—Å—Ç—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç–µ–º—ã

            –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∏ –∫–∞–∫ –ø–µ—Ä–≤–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã—Ö –¥–µ—è—Ç–µ–ª–µ–π, —Ç–∞–∫ –∏ –º–µ–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö, –Ω–æ –∑–Ω–∞—á–∏–º—ã—Ö –ø–µ—Ä—Å–æ–Ω.
            –î–ª—è –ø—Ä–æ—Ç–∏–≤–æ–±–æ—Ä—Å—Ç–≤—É—é—â–∏—Ö —Å—Ç–æ—Ä–æ–Ω (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ) –ø—Ä–µ–¥—Å—Ç–∞–≤—å –∫–ª—é—á–µ–≤—ã—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π –∫–∞–∂–¥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã.

            –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π —Ç–µ–∫—Å—Ç –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏—è–º, —á–µ—Ç–∫–æ –≤—ã–¥–µ–ª—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –¥–µ—è—Ç–µ–ª–µ.
            –û–±—ä–µ–º: 5-6 —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–±–∑–∞—Ü–µ–≤ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏ —Ç–æ—á–Ω—ã–º–∏ —Ñ–∞–∫—Ç–∞–º–∏.
            –ò–∑–±–µ–≥–∞–π –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤.
            """,

            "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç": f"""–†–∞–∑—Ä–∞–±–æ—Ç–∞–π –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –∞–Ω–∞–ª–∏–∑ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≤–Ω–µ—à–Ω–µ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —Ç–µ–º—ã "{topic}" –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.

            –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ö–≤–∞—Ç–∏:
            1. –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º—ã–π –ø–µ—Ä–∏–æ–¥
            2. –ò–Ω—Ç–µ—Ä–µ—Å—ã –∏ –ø–æ–∑–∏—Ü–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –¥–µ—Ä–∂–∞–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –†–æ—Å—Å–∏–∏ –∏ —Ç–µ–º—ã
            3. –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π, –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–∏–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å–æ–±—ã—Ç–∏–π
            4. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã, –≤—Å—Ç—Ä–µ—á–∏, —Å–æ–≥–ª–∞—à–µ–Ω–∏—è —Å —Ç–æ—á–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
            5. –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã, –ø–∞–∫—Ç—ã, –∞–ª—å—è–Ω—Å—ã (—Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è)
            6. –í–æ–µ–Ω–Ω—ã–µ, —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ, –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –†–æ—Å—Å–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏
            7. –†–µ–∞–∫—Ü–∏—è –º–∏—Ä–æ–≤–æ–π –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –ø–µ—á–∞—Ç–∏, –ø–æ–ª–∏—Ç–∏–∫–æ–≤ –Ω–∞ —Å–æ–±—ã—Ç–∏—è –≤ –†–æ—Å—Å–∏–∏
            8. –í–ª–∏—è–Ω–∏–µ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤ –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –≤ –†–æ—Å—Å–∏–∏

            –î–ª—è –∫–∞–∂–¥–æ–π —É–ø–æ–º—è–Ω—É—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã —É–∫–∞–∂–∏:
            ‚Ä¢ –ï—ë –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ü–µ–ª–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –†–æ—Å—Å–∏–∏
            ‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è –µ—ë –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞
            ‚Ä¢ –ò–º–µ–Ω–∞ –∫–ª—é—á–µ–≤—ã—Ö –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–µ—è—Ç–µ–ª–µ–π
            ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –µ—ë –ø–æ–∑–∏—Ü–∏–∏ –≤ —Ö–æ–¥–µ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–æ–±—ã—Ç–∏–π (–µ—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏–ª–æ)

            –û–±—ä–µ–º: 5-6 —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–±–∑–∞—Ü–µ–≤ —Å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º.
            –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ—á–Ω—ã–µ –¥–∞—Ç—ã, –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–æ–≤, –∏–º–µ–Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –¥–µ—è—Ç–µ–ª–µ–π.
            """,

            "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ": f"""–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –≥–ª—É–±–æ–∫–∏–π –∏ –º–Ω–æ–≥–æ–∞—Å–ø–µ–∫—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π —Ç–µ–º—ã "{topic}" –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏.

            –†–∞—Å—Å–º–æ—Ç—Ä–∏ —Å–ª–µ–¥—É—é—â–∏–µ –∞—Å–ø–µ–∫—Ç—ã:
            1. –ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Ç–æ–≥–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ–±—ã—Ç–∏–π/–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            2. –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (–∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ, –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ, –ø–æ–ª–∏—Ç–∏–∫–µ)
            3. –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (–∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ, —Ñ–∏–Ω–∞–Ω—Å–∞—Ö, —Ç–æ—Ä–≥–æ–≤–ª–µ)
            4. –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (–∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ–±—â–µ—Å—Ç–≤–µ, –ø–æ–ª–æ–∂–µ–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª–æ–µ–≤ –Ω–∞—Å–µ–ª–µ–Ω–∏—è)
            5. –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –∏ –∏–¥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (–≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∫—É–ª—å—Ç—É—Ä—É, –Ω–∞—É–∫—É, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)
            6. –í–æ–µ–Ω–Ω—ã–µ –∏ –≥–µ–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è (–∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü, –≤–æ–µ–Ω–Ω–æ–π –º–æ—â–∏, –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è)
            7. –í–ª–∏—è–Ω–∏–µ –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã –∏ —Å–æ–±—ã—Ç–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
            8. –û—Ü–µ–Ω–∫–∏ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–µ–º—ã –∏—Å—Ç–æ—Ä–∏–∫–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö —ç–ø–æ—Ö –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
            9. –û—Ç—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–º—ã –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏, –ø–∞–º—è—Ç–Ω–∏–∫–∞—Ö, –º–µ–º–æ—Ä–∏–∞–ª–∞—Ö, –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–π –ø–æ–ª–∏—Ç–∏–∫–µ
            10. –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–º—ã –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –†–æ—Å—Å–∏–∏

            –°–æ–ø–æ—Å—Ç–∞–≤—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–π —Ç–µ–º—ã, –ø—Ä–∏–≤–µ–¥–∏ —Ä–∞–∑–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –∏—Å—Ç–æ—Ä–∏–∫–æ–≤.
            –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞–∫ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ, —Ç–∞–∫ –∏ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è, –ø—Ä–æ—Å–ª–µ–∂–∏–≤–∞—è –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–∏–æ–¥—ã.

            –¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º, —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ —Ñ–∞–∫—Ç–∞–º–∏.
            –û–±—ä–µ–º: –Ω–µ –º–µ–Ω–µ–µ 5-6 —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∞–±–∑–∞—Ü–µ–≤.
            """
        }

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –≥–ª–∞–≤—ã –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç, –µ—Å–ª–∏ –≥–ª–∞–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        return chapter_prompts.get(chapter, f"–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ {chapter.lower()} –ø–æ —Ç–µ–º–µ '{topic}' –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏. –í–∫–ª—é—á–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞—Ç—ã, –º–µ—Å—Ç–∞, –∏–º–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ò–∑–±–µ–≥–∞–π –æ–±—â–∏—Ö —Ñ—Ä–∞–∑ –∏ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã.")

    def _format_topic_messages(self, topic, chapters_content):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–µ–º—ã –∏ —Ä–∞–∑–±–∏–≤–∞–µ—Ç –µ–≥–æ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –≥–ª–∞–≤–∞–º

        Args:
            topic (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
            chapters_content (dict): –°–ª–æ–≤–∞—Ä—å —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –≥–ª–∞–≤

        Returns:
            list: –°–ø–∏—Å–æ–∫ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        messages = []

        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–µ–º–µ
        toc_message = f"üìö *{topic.upper()}*\n\n‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì"
        toc_message += "\n\nüìã *–û–ì–õ–ê–í–õ–ï–ù–ò–ï:*\n"

        for i, chapter in enumerate(self.standard_chapters, 1):
            emoji = self.chapter_emoji.get(chapter, "‚Ä¢")
            toc_message += f"{emoji} *–ì–ª–∞–≤–∞ {i}:* {chapter}\n"

        toc_message += "\n‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ"

        # –î–æ–±–∞–≤–ª—è–µ–º –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ –∫–∞–∫ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        messages.append(toc_message)

        # –¢–µ–ø–µ—Ä—å —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã
        for i, chapter in enumerate(self.standard_chapters, 1):
            emoji = self.chapter_emoji.get(chapter, "‚Ä¢")
            content = chapters_content.get(chapter, "")

            # –ï—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤—ã –ø—É—Å—Ç–æ–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
            if not content:
                empty_message = f"{emoji} *–ì–õ–ê–í–ê {i}: {chapter.upper()}*\n\n"
                empty_message += f"‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà\n\n"
                empty_message += "‚ÑπÔ∏è _–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–∞–Ω–Ω–æ–π –≥–ª–∞–≤–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç._"

                if i < len(self.standard_chapters):
                    empty_message += f"\n\n‚Ä¢‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚Ä¢\n\n‚û°Ô∏è *–î–∞–ª–µ–µ:* –ì–ª–∞–≤–∞ {i+1}: {self.standard_chapters[i]}"
                else:
                    empty_message += f"\n\n‚Ä¢‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚Ä¢\n\nüìù *–ö–æ–Ω–µ—Ü –º–∞—Ç–µ—Ä–∏–∞–ª–∞*"

                messages.append(empty_message)
                continue

            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≥–ª–∞–≤—ã, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—è –µ–≥–æ
            formatted_content = self._format_chapter_content(content)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≥–ª–∞–≤—ã
            chapter_header = f"{emoji} *–ì–õ–ê–í–ê {i}: {chapter.upper()}*\n\n"
            chapter_header += f"‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà\n\n"

            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ—É—Ç–µ—Ä
            if i < len(self.standard_chapters):
                footer = f"\n\n‚Ä¢‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚Ä¢\n\n‚û°Ô∏è *–î–∞–ª–µ–µ:* –ì–ª–∞–≤–∞ {i+1}: {self.standard_chapters[i]}"
            else:
                footer = f"\n\n‚Ä¢‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚Ä¢\n\nüìù *–ö–æ–Ω–µ—Ü –º–∞—Ç–µ—Ä–∏–∞–ª–∞*"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —Ä–∞–∑–¥–µ–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
            full_message = chapter_header + formatted_content + footer

            if len(full_message) > self.max_message_size:
                # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —á–∞—Å—Ç–∏
                # –£—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Ñ—É—Ç–µ—Ä–∞
                available_size = self.max_message_size - len(chapter_header) - 100

                # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∞–±–∑–∞—Ü—ã
                paragraphs = formatted_content.split('\n\n')

                # –°–æ–±–∏—Ä–∞–µ–º —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
                current_part = ""
                part_messages = []

                for paragraph in paragraphs:
                    if len(current_part) + len(paragraph) + 4 <= available_size:
                        if current_part:
                            current_part += "\n\n" + paragraph
                        else:
                            current_part = paragraph
                    else:
                        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é —á–∞—Å—Ç—å –≤ —Å–ø–∏—Å–æ–∫
                        if current_part:
                            part_messages.append(current_part)
                        current_part = paragraph

                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å
                if current_part:
                    part_messages.append(current_part)

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —á–∞—Å—Ç—è–º–∏ –≥–ª–∞–≤—ã
                for j, part in enumerate(part_messages, 1):
                    part_prefix = f"{emoji} *–ì–õ–ê–í–ê {i}: {chapter.upper()}* (—á–∞—Å—Ç—å {j}/{len(part_messages)})\n\n"
                    part_prefix += f"‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà‚îà\n\n"

                    # –î–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —á–∞—Å—Ç–∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
                    if j == len(part_messages):
                        messages.append(part_prefix + part + footer)
                    else:
                        messages.append(part_prefix + part)
            else:
                # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Ü–µ–ª–∏–∫–æ–º
                messages.append(full_message)

        return messages

    def _format_chapter_content(self, content):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≥–ª–∞–≤—ã –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏

        Args:
            content (str): –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –≥–ª–∞–≤—ã

        Returns:
            str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≥–ª–∞–≤—ã
        """
        # –†–∞–∑–±–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∞–±–∑–∞—Ü—ã
        paragraphs = [p.strip() for p in re.split(r'\n{2,}', content) if p.strip()]

        # –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª—Å—è –æ–¥–∏–Ω –±–æ–ª—å—à–æ–π –∞–±–∑–∞—Ü, —Ä–∞–∑–±–∏–≤–∞–µ–º –µ–≥–æ –Ω–∞ –±–æ–ª–µ–µ –º–µ–ª–∫–∏–µ
        if len(paragraphs) <= 2 and any(len(p) > 400 for p in paragraphs):
            new_paragraphs = []
            for paragraph in paragraphs:
                # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∞–±–∑–∞—Ü—ã –Ω–∞ —Å–º—ã—Å–ª–æ–≤—ã–µ –±–ª–æ–∫–∏ –ø–æ —Ç–æ—á–∫–∞–º
                sentences = re.split(r'(?<=[.!?])\s+', paragraph)

                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ –æ–¥–∏–Ω –∞–±–∑–∞—Ü
                for i in range(0, len(sentences), 2):
                    if i+1 < len(sentences):
                        new_paragraphs.append(sentences[i] + " " + sentences[i+1])
                    else:
                        new_paragraphs.append(sentences[i])
            paragraphs = new_paragraphs

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∞–±–∑–∞—Ü —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç—å—é
        formatted_paragraphs = []

        for idx, paragraph in enumerate(paragraphs):
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤–Ω—É—Ç—Ä–∏ –∞–±–∑–∞—Ü–∞
            clean_paragraph = re.sub(r'\n+', ' ', paragraph)

            # –í—ã–¥–µ–ª—è–µ–º –¥–∞—Ç—ã –∏ –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º
            clean_paragraph = re.sub(r'(\d{4}(-\d{4})? (–≥–æ–¥|–≥–≥)|\d{1,2}-\d{1,2} –≤–µ–∫|[XIV]{1,5} –≤\.)', r'*\1*', clean_paragraph)

            # –í—ã–¥–µ–ª—è–µ–º –∏–º–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π
            clean_paragraph = re.sub(r'(—Ü–∞—Ä—å|–∏–º–ø–µ—Ä–∞—Ç–æ—Ä|–∫–Ω—è–∑—å|–∫–æ—Ä–æ–ª–µ–≤–∞|–ø—Ä–µ–º—å–µ—Ä-–º–∏–Ω–∏—Å—Ç—Ä|–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç|–≤–æ–µ–Ω–∞—á–∞–ª—å–Ω–∏–∫) ([–ê-–Ø][–∞-—è]+ [–ê-–Ø][–∞-—è]+)', r'\1 *\2*', clean_paragraph)

            # –í—ã–¥–µ–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
            key_terms = ["—Ä–µ—Ñ–æ—Ä–º–∞", "—Ä–µ–≤–æ–ª—é—Ü–∏—è", "–≤–æ–π–Ω–∞", "–¥–æ–≥–æ–≤–æ—Ä", "–≤–æ—Å—Å—Ç–∞–Ω–∏–µ", "–º–∞–Ω–∏—Ñ–µ—Å—Ç", "—É–∫–∞–∑"]
            for term in key_terms:
                clean_paragraph = re.sub(rf'({term}[–∞-—è]*)', r'_\1_', clean_paragraph, flags=re.IGNORECASE)

            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—ã–µ, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ø–∏—Å–æ–∫
            if len(clean_paragraph) > 300 and ":" in clean_paragraph and ("," in clean_paragraph or ";" in clean_paragraph):
                try:
                    intro, items_text = clean_paragraph.split(":", 1)
                    items = re.split(r'[,;]\s+', items_text)

                    if len(items) >= 3:  # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–ø–∏—Å–∫–∞
                        bullet_list = [intro + ":"]
                        for item in items:
                            if item.strip():
                                bullet_list.append(f"‚Ä¢ {item.strip()}")

                        clean_paragraph = "\n".join(bullet_list)
                except Exception:
                    pass  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∏—Ç—å –Ω–∞ —Å–ø–∏—Å–æ–∫, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å

            formatted_paragraphs.append(clean_paragraph)

        # –°–æ–µ–¥–∏–Ω—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–±–∑–∞—Ü—ã
        return "\n\n".join(formatted_paragraphs)